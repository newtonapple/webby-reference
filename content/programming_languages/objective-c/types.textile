---
browser_title:  Objective-C Types
title:          Objective-C Types
name:           Objective-C Types
created_at:     2009-01-08 15:14:07.970451 -08:00
filter:
  - wikiwords
  - erb
  - textile
  - outline
  - section
---

<%= render :partial => '/toc' %>


h2. Limits

System limits for various types can be found in <code>limit.h</code>.
<% uv :lang => 'objective-c' do -%>
  @import <limits.h>
  // ...
  NSLog(@"CHAR_MIN:   %c",   CHAR_MIN);
  NSLog(@"CHAR_MAX:   %c",   CHAR_MAX);
  NSLog(@"SHRT_MIN:   %hi",  SHRT_MIN);    // signed short int
  NSLog(@"SHRT_MAX:   %hi",  SHRT_MAX);
  NSLog(@"INT_MIN:    %i",   INT_MIN);
  NSLog(@"INT_MAX:    %i",   INT_MAX);
  NSLog(@"LONG_MIN:   %li",  LONG_MIN);    // signed long int
  NSLog(@"LONG_MAX:   %li",  LONG_MAX);
  NSLog(@"ULONG_MIN not defined, it's always zero: %lu", 0);  
  NSLog(@"ULONG_MAX:  %lu",  ULONG_MAX);   // unsigned long int
  NSLog(@"LLONG_MIN:  %lli", LLONG_MIN);   // signed long long int
  NSLog(@"LLONG_MAX:  %lli", LLONG_MAX);
  NSLog(@"ULLONG_MIN not defined, it's always zero: %llu", 0);  
  NSLog(@"ULLONG_MAX: %llu", ULLONG_MAX);  // unsigned long long int
<% end -%>


h2. Native Types


h3. char

<% uv :lang => 'objective-c' do -%>
  'a', '\n'
<% end -%>


h3. double

<code>double</code> is guaranteed to be at least 64-bit.  All numeric constants are by default assumed to be a <code>double</code> unless 
specified with either am <code>f</code> or <code>F</code>.

<% uv :lang => 'objective-c' do -%>
  12.31  // minimum 64-bit double 
  12.31f // minimum 32-bit float
  12.31F // minimum 32-bit float
<% end -%>

h2. NSLog Formats

<div class="featured">
  
|_. Type                              |_. Constant Examples               |_. NSLog Format                                                     |
| <code>char</code>                   | 'a', '\n'                         | <code>%c</code>                                                    |
| <code>short int</code>              |                                   | <code>%hi</code>, <code>%hx</code>, <code>%ho</code>               |
| <code>unsigned short int</code>     |                                   | <code>%hu</code>, <code>%hx</code>, <code>%ho</code>               |
| <code>int</code>                    | 17, -99, 0xFFAE, 0878             | <code>%i</code>, <code>%x</code>, <code>%o</code>                  |
| <code>unsigned int</code>           | 17u, 101U, OXFFu                  | <code>%u</code>, <code>%x</code>, <code>%o</code>                  |
| <code>long int</code>               | 17L, -2998, OxffffL               | <code>%li</code>, <code>%lx</code>, <code>%lo</code>               |
| <code>unsigned long int</code>      | 17UL, -100ul, OxffeeUL            | <code>%li</code>, <code>%lx</code>, <code>%lo</code>               |
| <code>long long int</code>          | 0xe5e5e5e5LL, 500ll               | <code>%lli</code>, <code>%llx</code>, <code>%llo</code>            |
| <code>unsigned long long int</code> | 17ull, oxffefULL                  | <code>%llu</code>, <code>%llx</code>, <code>%llo</code>            |
| <code>float</code>                  | 12.3f, 3.1e-5f, 0x1.5p10, 0x1P-1  | <code>%f</code>, <code>%e</code>, <code>%g</code>, <code>%a</code> |
| <code>double</code>                 | 12.34, 3.1e-5, 0x.1p3             | <code>%f</code>, <code>%e</code>, <code>%g</code>, <code>%a</code> |
| <code>long double</code>            | 12.34l, 3.1e-5l                   | <code>%Lf</code>, <code>%Le</code>, <code>%Lg</code>               |
| <code>id</code>                     | nil                               | <code>%p</code>                                                    |

</div>
